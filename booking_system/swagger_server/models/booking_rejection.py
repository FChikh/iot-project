# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class BookingRejection(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, booking_id: str=None, room_id: str=None, status: str=None, rejection_reason: str=None):  # noqa: E501
        """BookingRejection - a model defined in Swagger

        :param booking_id: The booking_id of this BookingRejection.  # noqa: E501
        :type booking_id: str
        :param room_id: The room_id of this BookingRejection.  # noqa: E501
        :type room_id: str
        :param status: The status of this BookingRejection.  # noqa: E501
        :type status: str
        :param rejection_reason: The rejection_reason of this BookingRejection.  # noqa: E501
        :type rejection_reason: str
        """
        self.swagger_types = {
            'booking_id': str,
            'room_id': str,
            'status': str,
            'rejection_reason': str
        }

        self.attribute_map = {
            'booking_id': 'booking_id',
            'room_id': 'room_id',
            'status': 'status',
            'rejection_reason': 'rejection_reason'
        }
        self._booking_id = booking_id
        self._room_id = room_id
        self._status = status
        self._rejection_reason = rejection_reason

    @classmethod
    def from_dict(cls, dikt) -> 'BookingRejection':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The BookingRejection of this BookingRejection.  # noqa: E501
        :rtype: BookingRejection
        """
        return util.deserialize_model(dikt, cls)

    @property
    def booking_id(self) -> str:
        """Gets the booking_id of this BookingRejection.


        :return: The booking_id of this BookingRejection.
        :rtype: str
        """
        return self._booking_id

    @booking_id.setter
    def booking_id(self, booking_id: str):
        """Sets the booking_id of this BookingRejection.


        :param booking_id: The booking_id of this BookingRejection.
        :type booking_id: str
        """

        self._booking_id = booking_id

    @property
    def room_id(self) -> str:
        """Gets the room_id of this BookingRejection.


        :return: The room_id of this BookingRejection.
        :rtype: str
        """
        return self._room_id

    @room_id.setter
    def room_id(self, room_id: str):
        """Sets the room_id of this BookingRejection.


        :param room_id: The room_id of this BookingRejection.
        :type room_id: str
        """

        self._room_id = room_id

    @property
    def status(self) -> str:
        """Gets the status of this BookingRejection.


        :return: The status of this BookingRejection.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status: str):
        """Sets the status of this BookingRejection.


        :param status: The status of this BookingRejection.
        :type status: str
        """

        self._status = status

    @property
    def rejection_reason(self) -> str:
        """Gets the rejection_reason of this BookingRejection.


        :return: The rejection_reason of this BookingRejection.
        :rtype: str
        """
        return self._rejection_reason

    @rejection_reason.setter
    def rejection_reason(self, rejection_reason: str):
        """Sets the rejection_reason of this BookingRejection.


        :param rejection_reason: The rejection_reason of this BookingRejection.
        :type rejection_reason: str
        """

        self._rejection_reason = rejection_reason
