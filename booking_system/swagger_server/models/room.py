# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.room_features import RoomFeatures  # noqa: F401,E501
from swagger_server import util


class Room(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, room_id: str=None, rank: int=None, score: float=None, features: RoomFeatures=None):  # noqa: E501
        """Room - a model defined in Swagger

        :param room_id: The room_id of this Room.  # noqa: E501
        :type room_id: str
        :param rank: The rank of this Room.  # noqa: E501
        :type rank: int
        :param score: The score of this Room.  # noqa: E501
        :type score: float
        :param features: The features of this Room.  # noqa: E501
        :type features: RoomFeatures
        """
        self.swagger_types = {
            'room_id': str,
            'rank': int,
            'score': float,
            'features': RoomFeatures
        }

        self.attribute_map = {
            'room_id': 'room_id',
            'rank': 'rank',
            'score': 'score',
            'features': 'features'
        }
        self._room_id = room_id
        self._rank = rank
        self._score = score
        self._features = features

    @classmethod
    def from_dict(cls, dikt) -> 'Room':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Room of this Room.  # noqa: E501
        :rtype: Room
        """
        return util.deserialize_model(dikt, cls)

    @property
    def room_id(self) -> str:
        """Gets the room_id of this Room.


        :return: The room_id of this Room.
        :rtype: str
        """
        return self._room_id

    @room_id.setter
    def room_id(self, room_id: str):
        """Sets the room_id of this Room.


        :param room_id: The room_id of this Room.
        :type room_id: str
        """

        self._room_id = room_id

    @property
    def rank(self) -> int:
        """Gets the rank of this Room.


        :return: The rank of this Room.
        :rtype: int
        """
        return self._rank

    @rank.setter
    def rank(self, rank: int):
        """Sets the rank of this Room.


        :param rank: The rank of this Room.
        :type rank: int
        """

        self._rank = rank

    @property
    def score(self) -> float:
        """Gets the score of this Room.


        :return: The score of this Room.
        :rtype: float
        """
        return self._score

    @score.setter
    def score(self, score: float):
        """Sets the score of this Room.


        :param score: The score of this Room.
        :type score: float
        """

        self._score = score

    @property
    def features(self) -> RoomFeatures:
        """Gets the features of this Room.


        :return: The features of this Room.
        :rtype: RoomFeatures
        """
        return self._features

    @features.setter
    def features(self, features: RoomFeatures):
        """Sets the features of this Room.


        :param features: The features of this Room.
        :type features: RoomFeatures
        """

        self._features = features
