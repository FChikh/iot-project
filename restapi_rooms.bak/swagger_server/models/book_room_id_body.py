# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class BookRoomIdBody(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, responsible: str=None, description: str=None, start_timestamp: datetime=None):  # noqa: E501
        """BookRoomIdBody - a model defined in Swagger

        :param responsible: The responsible of this BookRoomIdBody.  # noqa: E501
        :type responsible: str
        :param description: The description of this BookRoomIdBody.  # noqa: E501
        :type description: str
        :param start_timestamp: The start_timestamp of this BookRoomIdBody.  # noqa: E501
        :type start_timestamp: datetime
        """
        self.swagger_types = {
            'responsible': str,
            'description': str,
            'start_timestamp': datetime
        }

        self.attribute_map = {
            'responsible': 'responsible',
            'description': 'description',
            'start_timestamp': 'start_timestamp'
        }
        self._responsible = responsible
        self._description = description
        self._start_timestamp = start_timestamp

    @classmethod
    def from_dict(cls, dikt) -> 'BookRoomIdBody':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The book_room_id_body of this BookRoomIdBody.  # noqa: E501
        :rtype: BookRoomIdBody
        """
        return util.deserialize_model(dikt, cls)

    @property
    def responsible(self) -> str:
        """Gets the responsible of this BookRoomIdBody.

        Name or identifier of the person responsible for the booking  # noqa: E501

        :return: The responsible of this BookRoomIdBody.
        :rtype: str
        """
        return self._responsible

    @responsible.setter
    def responsible(self, responsible: str):
        """Sets the responsible of this BookRoomIdBody.

        Name or identifier of the person responsible for the booking  # noqa: E501

        :param responsible: The responsible of this BookRoomIdBody.
        :type responsible: str
        """

        self._responsible = responsible

    @property
    def description(self) -> str:
        """Gets the description of this BookRoomIdBody.

        Description of the booking (e.g., course name)  # noqa: E501

        :return: The description of this BookRoomIdBody.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description: str):
        """Sets the description of this BookRoomIdBody.

        Description of the booking (e.g., course name)  # noqa: E501

        :param description: The description of this BookRoomIdBody.
        :type description: str
        """

        self._description = description

    @property
    def start_timestamp(self) -> datetime:
        """Gets the start_timestamp of this BookRoomIdBody.

        Start timestamp for the booking in format \"%Y-%m-%d %H-%M-%S\"  # noqa: E501

        :return: The start_timestamp of this BookRoomIdBody.
        :rtype: datetime
        """
        return self._start_timestamp

    @start_timestamp.setter
    def start_timestamp(self, start_timestamp: datetime):
        """Sets the start_timestamp of this BookRoomIdBody.

        Start timestamp for the booking in format \"%Y-%m-%d %H-%M-%S\"  # noqa: E501

        :param start_timestamp: The start_timestamp of this BookRoomIdBody.
        :type start_timestamp: datetime
        """

        self._start_timestamp = start_timestamp
