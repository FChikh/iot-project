openapi: 3.0.0
info:
  title: Room Sensors API
  description: API for retrieving sensor data from different rooms
  version: 1.0.0
servers:
- url: http://localhost:8087
  description: Room Sensors
paths:
  /book/{room_id}:
    post:
      summary: Book a specific room
      description: Book a 30-minute time slot for a specific room.
      operationId: book_room_id_post
      parameters:
      - name: room_id
        in: path
        description: Unique identifier for the room
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/book_room_id_body'
        required: true
      responses:
        "200":
          description: Booking successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
        "409":
          description: Room is already booked for the given time
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_409'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_500'
      x-openapi-router-controller: swagger_server.controllers.default_controller
  /sensor/rooms:
    get:
      summary: Get sensor data for all rooms
      description: Retrieve all sensor data (temperature and air quality) for all
        rooms
      operationId: sensor_rooms_get
      responses:
        "200":
          description: A JSON array of rooms with their sensor data captured the past
            2 Weeks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RoomData'
                x-content-type: application/json
        "404":
          description: No sensor data found for any rooms
      x-openapi-router-controller: swagger_server.controllers.default_controller
  /sensor/{room_id}:
    get:
      summary: Get sensor data for a specific room
      description: Retrieve all sensor data for a specific room
      operationId: sensor_room_id_get
      parameters:
      - name: room_id
        in: path
        description: Unique identifier for the room
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomData'
        "404":
          description: No sensor data found for room room_id
      x-openapi-router-controller: swagger_server.controllers.default_controller
  /rooms/airquality:
    get:
      summary: Get air quality data for all rooms
      description: Retrieve air quality measurements for all rooms
      operationId: rooms_airquality_get
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RoomAirQuality'
                x-content-type: application/json
        "404":
          description: No airquality data found for any rooms
      x-openapi-router-controller: swagger_server.controllers.default_controller
  /rooms/temperature:
    get:
      summary: Get temperature data for all rooms
      description: Retrieve temperature measurements for all rooms
      operationId: rooms_temperature_get
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RoomTemperature'
                x-content-type: application/json
        "404":
          description: No temperature data found for any rooms
      x-openapi-router-controller: swagger_server.controllers.default_controller
  /rooms/light:
    get:
      summary: Get light data for all rooms
      description: Retrieve light measurements for all rooms
      operationId: rooms_light_get
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RoomLight'
                x-content-type: application/json
        "404":
          description: No light data found for any rooms
      x-openapi-router-controller: swagger_server.controllers.default_controller
  /rooms/humidity:
    get:
      summary: Get humidity data for all rooms
      description: Retrieve humidity measurements for all rooms
      operationId: rooms_humidity_get
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RoomHumidity'
                x-content-type: application/json
        "404":
          description: No humidity data found for any rooms
      x-openapi-router-controller: swagger_server.controllers.default_controller
  /rooms/bookings:
    get:
      summary: Get bookings for all rooms
      description: Retrieve booking timestamps for all rooms within a specified time
        interval
      operationId: rooms_bookings_get
      parameters:
      - name: startDate
        in: query
        description: Start date for the booking period (YYYY-MM-DD)
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: days
        in: query
        description: Number of days to retrieve bookings for
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: Successfully retrieved bookings for all rooms
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    $ref: '#/components/schemas/Booking'
                example:
                  room001:
                  - 2024-12-01 17:30:00
                  - 2024-12-01 16:00:00
                  room002:
                  - 2024-12-02 17:30:00
                x-content-type: application/json
        "400":
          description: Google Calendar API error
        "500":
          description: Internal server error
      x-openapi-router-controller: swagger_server.controllers.default_controller
  /{room_id}/airquality:
    get:
      summary: Get air quality data for a specific room
      description: Retrieve air quality measurements for a specific room
      operationId: room_id_airquality_get
      parameters:
      - name: room_id
        in: path
        description: Unique identifier for the room
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomAirQuality'
        "404":
          description: No air quality data found for the given room
      x-openapi-router-controller: swagger_server.controllers.default_controller
  /{room_id}/temperature:
    get:
      summary: Get temperature data for a specific room
      description: Retrieve temperature measurements for a specific room
      operationId: room_id_temperature_get
      parameters:
      - name: room_id
        in: path
        description: Unique identifier for the room
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomTemperature'
        "404":
          description: No temperature data found for the given room
      x-openapi-router-controller: swagger_server.controllers.default_controller
  /{room_id}/humidity:
    get:
      summary: Get humidity data for a specific room
      description: Retrieve humidity measurements for a specific room
      operationId: room_id_humidity_get
      parameters:
      - name: room_id
        in: path
        description: Unique identifier for the room
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomHumidity'
        "404":
          description: No humidity data found for the given room
      x-openapi-router-controller: swagger_server.controllers.default_controller
  /{room_id}/light:
    get:
      summary: Get light data for a specific room
      description: Retrieve light measurements for a specific room
      operationId: room_id_light_get
      parameters:
      - name: room_id
        in: path
        description: Unique identifier for the room
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomLight'
        "404":
          description: No light data found for the given room
      x-openapi-router-controller: swagger_server.controllers.default_controller
  /{room_id}/bookings:
    get:
      summary: Get bookings for specific room
      description: Retrieve booking timestamps for a specific room within a specified
        time interval
      operationId: room_id_bookings_get
      parameters:
      - name: room_id
        in: path
        description: Unique identifier for the room
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: startDate
        in: query
        description: Start date for the booking period (YYYY-MM-DD)
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date
      - name: days
        in: query
        description: Number of days to retrieve bookings for
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: Successfully retrieved bookings for the specified room
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
        "400":
          description: Internal server error
        "500":
          description: Internal server error
      x-openapi-router-controller: swagger_server.controllers.default_controller
components:
  schemas:
    RoomData:
      type: object
      properties:
        room:
          type: string
          description: Room identifier
        temperature:
          type: array
          items:
            $ref: '#/components/schemas/TemperatureReading'
        airquality:
          type: array
          items:
            $ref: '#/components/schemas/AirQualityReading'
        light:
          type: array
          items:
            $ref: '#/components/schemas/LightReading'
        humidity:
          type: array
          items:
            $ref: '#/components/schemas/HumidityReading'
      example:
        light:
        - value: 1.46581298050294517310021547018550336360931396484375
          timestamp: 2000-01-23T04:56:07.000+00:00
        - value: 1.46581298050294517310021547018550336360931396484375
          timestamp: 2000-01-23T04:56:07.000+00:00
        temperature:
        - value: 0.8008282
          timestamp: 2000-01-23T04:56:07.000+00:00
        - value: 0.8008282
          timestamp: 2000-01-23T04:56:07.000+00:00
        airquality:
        - value: 6.02745618307040320615897144307382404804229736328125
          timestamp: 2000-01-23T04:56:07.000+00:00
        - value: 6.02745618307040320615897144307382404804229736328125
          timestamp: 2000-01-23T04:56:07.000+00:00
        humidity:
        - value: 5.962133916683182377482808078639209270477294921875
          timestamp: 2000-01-23T04:56:07.000+00:00
        - value: 5.962133916683182377482808078639209270477294921875
          timestamp: 2000-01-23T04:56:07.000+00:00
        room: room
    RoomTemperature:
      type: object
      properties:
        room:
          type: string
          description: Room identifier
        temperature:
          type: array
          items:
            $ref: '#/components/schemas/TemperatureReading'
      example:
        temperature:
        - value: 0.8008282
          timestamp: 2000-01-23T04:56:07.000+00:00
        - value: 0.8008282
          timestamp: 2000-01-23T04:56:07.000+00:00
        room: room
    RoomAirQuality:
      type: object
      properties:
        room:
          type: string
          description: Room identifier
        airquality:
          type: array
          items:
            $ref: '#/components/schemas/AirQualityReading'
      example:
        airquality:
        - value: 6.02745618307040320615897144307382404804229736328125
          timestamp: 2000-01-23T04:56:07.000+00:00
        - value: 6.02745618307040320615897144307382404804229736328125
          timestamp: 2000-01-23T04:56:07.000+00:00
        room: room
    RoomLight:
      type: object
      properties:
        room:
          type: string
          description: Room identifier
        light:
          type: array
          items:
            $ref: '#/components/schemas/LightReading'
      example:
        light:
        - value: 1.46581298050294517310021547018550336360931396484375
          timestamp: 2000-01-23T04:56:07.000+00:00
        - value: 1.46581298050294517310021547018550336360931396484375
          timestamp: 2000-01-23T04:56:07.000+00:00
        room: room
    RoomHumidity:
      type: object
      properties:
        room:
          type: string
          description: Room identifier
        humidity:
          type: array
          items:
            $ref: '#/components/schemas/HumidityReading'
      example:
        humidity:
        - value: 5.962133916683182377482808078639209270477294921875
          timestamp: 2000-01-23T04:56:07.000+00:00
        - value: 5.962133916683182377482808078639209270477294921875
          timestamp: 2000-01-23T04:56:07.000+00:00
        room: room
    TemperatureReading:
      type: object
      properties:
        timestamp:
          type: string
          description: Time of the temperature reading
          format: date-time
        value:
          type: number
          description: Temperature value in Celsius
          format: float
      example:
        value: 0.8008282
        timestamp: 2000-01-23T04:56:07.000+00:00
    AirQualityReading:
      type: object
      properties:
        timestamp:
          type: string
          description: Time of the air quality reading
          format: date-time
        value:
          type: number
          description: Concentration of CO2 in percentage %
      example:
        value: 6.02745618307040320615897144307382404804229736328125
        timestamp: 2000-01-23T04:56:07.000+00:00
    LightReading:
      type: object
      properties:
        timestamp:
          type: string
          description: Time of the light reading
          format: date-time
        value:
          type: number
          description: Amount of light falling on a surface in lux = lumen/m2
      example:
        value: 1.46581298050294517310021547018550336360931396484375
        timestamp: 2000-01-23T04:56:07.000+00:00
    HumidityReading:
      type: object
      properties:
        timestamp:
          type: string
          description: Time of the humidity reading
          format: date-time
        value:
          type: number
          description: amount of water vapor in the air relative to the maximum amount
            the air can hold at a given temperature in percent %
      example:
        value: 5.962133916683182377482808078639209270477294921875
        timestamp: 2000-01-23T04:56:07.000+00:00
    Booking:
      type: string
      format: date-time
    book_room_id_body:
      type: object
      properties:
        responsible:
          type: string
          description: Name or identifier of the person responsible for the booking
          example: John Doe
        description:
          type: string
          description: "Description of the booking (e.g., course name)"
          example: Math 101
        start_timestamp:
          type: string
          description: Start timestamp for the booking in format "YYYY-MM-DD HH-MM-SS"
          format: date-time
    inline_response_200:
      type: object
      properties:
        status:
          type: string
          example: success
        message:
          type: string
          example: Room booked successfully.
      example:
        message: Room booked successfully.
        status: success
    inline_response_400:
      type: object
      properties:
        status:
          type: string
          example: error
        message:
          type: string
          example: Invalid request data.
    inline_response_409:
      type: object
      properties:
        status:
          type: string
          example: error
        message:
          type: string
          example: Room is already booked for the specified time slot.
    inline_response_500:
      type: object
      properties:
        status:
          type: string
          example: error
        message:
          type: string
          example: An unexpected error occurred.
    inline_response_200_1:
      type: object
      properties:
        room_id:
          type: array
          items:
            $ref: '#/components/schemas/Booking'
      example:
        room001:
        - 2024-12-01 17:30:00
        - 2024-12-01 16:00:00

