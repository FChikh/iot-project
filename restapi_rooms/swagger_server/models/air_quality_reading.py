# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class AirQualityReading(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, timestamp: datetime=None, co2: float=None):  # noqa: E501
        """AirQualityReading - a model defined in Swagger

        :param timestamp: The timestamp of this AirQualityReading.  # noqa: E501
        :type timestamp: datetime
        :param co2: The co2 of this AirQualityReading.  # noqa: E501
        :type co2: float
        """
        self.swagger_types = {
            'timestamp': datetime,
            'co2': float
        }

        self.attribute_map = {
            'timestamp': 'timestamp',
            'co2': 'co2'
        }
        self._timestamp = timestamp
        self._co2 = co2

    @classmethod
    def from_dict(cls, dikt) -> 'AirQualityReading':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AirQualityReading of this AirQualityReading.  # noqa: E501
        :rtype: AirQualityReading
        """
        return util.deserialize_model(dikt, cls)

    @property
    def timestamp(self) -> datetime:
        """Gets the timestamp of this AirQualityReading.

        Time of the air quality reading  # noqa: E501

        :return: The timestamp of this AirQualityReading.
        :rtype: datetime
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp: datetime):
        """Sets the timestamp of this AirQualityReading.

        Time of the air quality reading  # noqa: E501

        :param timestamp: The timestamp of this AirQualityReading.
        :type timestamp: datetime
        """

        self._timestamp = timestamp

    @property
    def co2(self) -> float:
        """Gets the co2 of this AirQualityReading.

        Concentration of CO2 in percentage %  # noqa: E501

        :return: The co2 of this AirQualityReading.
        :rtype: float
        """
        return self._co2

    @co2.setter
    def co2(self, co2: float):
        """Sets the co2 of this AirQualityReading.

        Concentration of CO2 in percentage %  # noqa: E501

        :param co2: The co2 of this AirQualityReading.
        :type co2: float
        """

        self._co2 = co2
